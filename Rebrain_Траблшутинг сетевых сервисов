Networks by Rebrain: Траблшутинг сетевых сервисов. Инструменты и утилиты для диагностики
https://vkvideo.ru/video-165282829_456239102
Networks by Rebrain: Траблшутинг сетевых сервисов. Инструменты и утилиты для диагностики
Ольга Яновская

Начало 
1) Диагностика физического уровня 
Тоесть это физика передачи сигнала 

Утилиты 
ethtool
cable diag
test cooper-port tdr
ddm status 


Пример использования утилит 
Определяю интерфейс 
root@student:/home/student# ip -br a
lo               UNKNOWN        127.0.0.1/8 ::1/128 
enp0s3           UP             10.0.2.15/24 fd00::e882:bac7:9e25:811f/64 fd00::52d9:b752:424:8f7a/64 fe80::cdc0:3007:feab:10ce/64

$  ethtool  enp0s3
root@student:/home/student# ethtool  enp0s3
Settings for enp0s3:
	Supported ports: [ TP ]
	Supported link modes:   10baseT/Half 10baseT/Full
	                        100baseT/Half 100baseT/Full
	                        1000baseT/Full
	Supported pause frame use: No
	Supports auto-negotiation: Yes
	Supported FEC modes: Not reported
	Advertised link modes:  10baseT/Half 10baseT/Full
	                        100baseT/Half 100baseT/Full
	                        1000baseT/Full
	Advertised pause frame use: No
	Advertised auto-negotiation: Yes
	Advertised FEC modes: Not reported
	Speed: 1000Mb/s  -- скорость соединения
	Duplex: Full       ---  тип соединения. Full -  прием и отправка данных одновременно
	Auto-negotiation: on
	Port: Twisted Pair --- порт. Twisted Pair – витая пара 
	PHYAD: 0
	Transceiver: internal
	MDI-X: off (auto)
	Supports Wake-on: umbg
	Wake-on: d
        Current message level: 0x00000007 (7)
                               drv probe link
	Link detected: yes    --- смотрим сюда активен ли лик соединения физический Yes = ok

Статистика по интерфейсу 
$  ethtool  -S enp0s3
root@student:/home/student# ethtool  -S enp0s3
NIC statistics:
     rx_packets: 167  -- пакеты принимаются с сетевого интерфейса 
     tx_packets: 106 -- пакеты отправляются  с сетевого интерфейса
     rx_bytes: 220946 – байты  принимаются с сетевого интерфейса
     tx_bytes: 14106 -- отправляются  с сетевого интерфейса
Если пакеты не отправляются, то это аномалия на уровне драйвера сетевого адаптера, на уровне самого сетевого устройства  
     rx_broadcast: 1
     tx_broadcast: 6
     rx_multicast: 3
     tx_multicast: 65
     rx_errors: 0  -- resived  ошибки при приеме 
     tx_errors: 0 – transmited   ошибки при передаче 
     tx_dropped: 0  --- это пакеты которые были отброшены. Больше 0 - плохо
     multicast: 3
     collisions: 0
     rx_length_errors: 0
     rx_over_errors: 0
     rx_crc_errors: 0
     rx_frame_errors: 0
     rx_no_buffer_count: 0
     rx_missed_errors: 0
     tx_aborted_errors: 0
     tx_carrier_errors: 0
     tx_fifo_errors: 0
     tx_heartbeat_errors: 0
     tx_window_errors: 0
     tx_abort_late_coll: 0
     tx_deferred_ok: 0
     tx_single_coll_ok: 0
     tx_multi_coll_ok: 0
     tx_timeout_count: 0
     tx_restart_queue: 0
     rx_long_length_errors: 0
     rx_short_length_errors: 0
     rx_align_errors: 0
     tx_tcp_seg_good: 0
     tx_tcp_seg_failed: 0
     rx_flow_control_xon: 0
     rx_flow_control_xoff: 0
     tx_flow_control_xon: 0
     tx_flow_control_xoff: 0
     rx_long_byte_count: 220946
     rx_csum_offload_good: 0
     rx_csum_offload_errors: 0
     alloc_rx_buff_failed: 0
     tx_smbus: 0
     rx_smbus: 0
     dropped_smbus: 0

Тестирование сетевых интерфейсов 
Онлайн – порт физ не выключается 
$  ethtool  -t enp0s3 online 
root@student:/home/student# ethtool  -t enp0s3 online 
The test result is PASS – результат проверки pass – все пройдено – ок 
The test extra info:
Register test  (offline)	 0
Eeprom test    (offline)	 0
Interrupt test (offline)	 0
Loopback test  (offline)	 0
Link test   (on/offline)	 0
Онлайн – порт надо погасить, а потом снова поднять 

Если есть доступ к промежуточному оборудованию 
Например к  коммутатору 
Диагностика физ линии на которой подключен потребитель С
$ test  тип_витая_пара  tdr  интерфейс 
Test Tdr  Time domain Reflectometry
$ test   cooper-port tdr e4
E4 -  нзвания порта свича куда подключен  клиент С
Статистика по интерфейсу самого свича 

Show  interfaces counters  ethernet номер_порта--  счетчики по конкретному порту 
$ Show  interfaces counters  ethernet e4 
Show  interfaces status   ethernet e4  --   просмотр статуса интерфейса 


==============================
Канальный уровень 
Задача проверить двухсторонную связность и настройки сетевых устройств 
Утилиты 
Ifconfig / ipconfig/ ip addr
Ping
Arp
Ip nei
Show mac-address table /  fdb

Проверки настроек у клиента 
root@student:/home/student# ifconfig
enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
        inet6 fd00::52d9:b752:424:8f7a  prefixlen 64  scopeid 0x0<global>
        inet6 fe80::cdc0:3007:feab:10ce  prefixlen 64  scopeid 0x20<link>
        inet6 fd00::e882:bac7:9e25:811f  prefixlen 64  scopeid 0x0<global>
        ether 08:00:27:f3:8a:e7  txqueuelen 1000  (Ethernet)
        RX packets 169  bytes 220498 (220.4 KB) – статистика по физике  принятые пакеты/ байты
        RX errors 0  dropped 0  overruns 0  frame 0 – статистика по ошибкам приема
        TX packets 116  bytes 15394 (15.3 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0 – статистика по ошибкам передачи

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 250  bytes 77331 (77.3 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 250  bytes 77331 (77.3 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
Lo – это логический интерфейс look back, используется для отправки пакетов самому себе. Называется замыкание интерфейса обратной петли 

Тоже самое покажет ip addr
root@student:/home/student# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:f3:8a:e7 brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global dynamic noprefixroute enp0s3
       valid_lft 84379sec preferred_lft 84379sec
    inet6 fd00::e882:bac7:9e25:811f/64 scope global temporary dynamic 
       valid_lft 85404sec preferred_lft 13404sec
    inet6 fd00::52d9:b752:424:8f7a/64 scope global dynamic mngtmpaddr noprefixroute 
       valid_lft 85404sec preferred_lft 13404sec
    inet6 fe80::cdc0:3007:feab:10ce/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever

Далее проверяю связность на канальном уровне 
Ping 
- лупит по всем портам 
root@student:/home/student# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=255 time=22.9 ms – время отклика  или rtt – round treap time
64 bytes from 8.8.8.8: icmp_seq=2 ttl=255 time=21.9 ms
64 bytes from 8.8.8.8: icmp_seq=3 ttl=255 time=21.7 ms
64 bytes from 8.8.8.8: icmp_seq=4 ttl=255 time=22.1 ms
64 bytes from 8.8.8.8: icmp_seq=5 ttl=255 time=22.4 m
^C
--- 8.8.8.8 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4006ms – смотрим статистику потерь, если 0 – то все ок , значит с физикой все ок и пакеты нигде не теряются
rtt min/avg/max/mdev = 21.729/22.214/22.934/0.435 ms

Если не отвечает на ping , как проверить ??
Если узел находиться в тойже самой сети 
Смотрим закешированную информацю  в arp таблице 
$ Arp -a 
root@student:/home/student# arp -a
_gateway (10.0.2.2) at 52:55:0a:00:02:02 [ether] on enp0s3
? (10.0.2.3) at 52:55:0a:00:02:03 [ether] on enp0s3
Тоже самое ip nei  ( neiber) 
root@student:/home/student# ip nei
10.0.2.2 dev enp0s3 lladdr 52:55:0a:00:02:02 STALE
10.0.2.3 dev enp0s3 lladdr 52:55:0a:00:02:03 STALE
fe80::2 dev enp0s3 lladdr 52:56:00:00:00:02 router STALE
fd00::2 dev enp0s3 lladdr 52:56:00:00:00:02 router STALE

с  Какими клиентами связывался в локальной сети 
ip устройства                        мак адрес устройства 
10.0.2.2 dev enp0s3 lladdr 52:55:0a:00:02:02 STALE
ИТОГ: если есть доя устройства art  запись, это значит это устройство доступно в перделах этой сети и с ним  можно связыватся даже если он не отвечает на ping  = стоит запрет ответа на симпи запрос 

С коммутатора  можно посмотреть туже таблицу 
Show mac addres-table adders 

В локальной сети время отклика rtt =  около 1 мс 

ИТОГ:  Если в пределах одной сети  1) смотрим есть art  запись  2) если есть доступ до коммутатора – посмотреть долитают ли эти маки до него 
=======================
Диагностика сетевого уровня 
Требования: Проверить логическую адресацию и маршрутизацию данных 
Утилиты:
Traceroute/ tracert
Netstat -r
Ip route / route print
Show ip route 

Проверка шлюза маршрутизации 
$ Ip route  -- выводит таблицу маршрутизации на этом устройстве 
root@student:/home/student# ip route
default via 10.0.2.2 dev enp0s3 proto dhcp metric 100 
10.0.2.0/24 dev enp0s3 proto kernel scope link src 10.0.2.15 metric 100 
169.254.0.0/16 dev enp0s3 scope link metric 1000

На случай добавления марштура в таблицу 
Ip route add  default  via  ip марштуризатора 

Делаю трассировку марштрута – покажет промежуточные узлы через которые будет идти пакет до того как придёт до конечного хоста назначения 
Traceroute  ip 
root@student:/home/student# traceroute  8.8.8.8
traceroute to 8.8.8.8 (8.8.8.8), 64 hops max
  1   10.0.2.2  0,002ms  0,003ms  0,002ms 
  2   10.0.2.2  0,961ms  0,447ms  0,600ms
=======================
Диагностика транспортный уровень 
=======================

Диагностируем соединение на уровне сокетов 
Сокет – программный интерфейс, который предсталяет из себя связку  ip  номер порта и протокол транскортного уровня 
Утилиты 
Netstat / lsof/ ss
telnet port number 
nmap 
netstat -nt

Способен ли сервер принять входящее соединение от клиента:
Netstat -  выведет все соединения и состояния в которых они находятся 
State  estableshe -  установлено 

netstat -nt | grep 8.8
-n – отображать имена портов и доменные имена в виде цифр 
t -  tsp  соединение 
Как посмотреть способен ли сервер принять входящее соединение от сервера ???
1) Открыт ли порт на сервере  ss – 2) постучаться в данное соединение 
1) Открыт ли порт на сервере 
ss -lnt 
l - в статусе listen, тоесть прослушиваются., готовы для приема входящих соединений 
t-  tsp соединения 
student:~$ ss -lnt
State        Recv-Q       Send-Q             Local Address:Port             Peer Address:Port      Process      
LISTEN       0            128                    127.0.0.1:631                   0.0.0.0:*                      
LISTEN       0            200                    127.0.0.1:5432                  0.0.0.0:*                      
LISTEN       0            511                      0.0.0.0:80                    0.0.0.0:*                      
LISTEN       0            4096               127.0.0.53%lo:53                    0.0.0.0:*                      
LISTEN       0            128                        [::1]:631                      [::]:*                      
LISTEN       0            511                         [::]:80                       [::]:* 


2) Проверка доступности порта на стороне сервера с клиента 
Основное назначение telnet – удаленное управление другими устройствами 
telnet ip port 

student:~$ telnet 127.0.0.1 5432
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.

Случай, когда порт закрыт 
student:~$ telnet 8.8.8.8 80
Trying 8.8.8.8...

3) Попробовать просканировать порты все 
nmap ip


student:~$ nmap 127.0.0.1
Starting Nmap 7.80 ( https://nmap.org ) at 2025-03-29 20:30 MSK
Nmap scan report for localhost (127.0.0.1)
Host is up (0.00010s latency).
Not shown: 997 closed ports
PORT     STATE SERVICE
80/tcp   open  http
631/tcp  open  ipp
5432/tcp open  postgresql

Nmap done: 1 IP address (1 host up) scanned in 0.07 seconds

nmap -nsp  # аналог ping 

student:~$ nmap -nsP  127.0.0.1
Starting Nmap 7.80 ( https://nmap.org ) at 2025-03-29 20:31 MSK
Nmap scan report for 127.0.0.1
Host is up (0.000094s latency).
Nmap done: 1 IP address (1 host up) scanned in 0.00 seconds

ИТОГ: все в порядке с транспортом, на уровне сокетов проблем нет
 =======================
3 Сеансовый уровень 
=======================
Диагностика служб и приложений 

Утилиты 
Tcpdump
Wireshark
Dhcpdump
Nslookup/dig/host ---  диагностика проблем с ДНС 
Iperf  --- диагностика проблем со скоростью передачи по сети 
iptables
1) Анализаторы сетевого трафика 
tspdump
student:~$ sudo tcpdump -i enp0s3 host 127.0.0.1
tcpdump: verbose output suppressed, use -v[v]... for full protocol decode
listening on enp0s3, link-type EN10MB (Ethernet), snapshot length 262144 bytes
^C
0 packets captured
0 packets received by filter
0 packets dropped by kernel

enp0s3 из ip -br address
student:~$ ip -br a
lo               UNKNOWN        127.0.0.1/8 ::1/128 
enp0s3           UP             10.0.2.15/24 fd00::d6f9:6929:ebd4:ec59/64 fd00::52d9:b752:424:8f7a/64 fe80::cdc0:3007:feab:10ce/64

wireshark

смотрим на коды ответа 
200 - ок 
500 - плохо 

2) диагностика проблем dns 
nslookup
big
host

3) iperf  # диагностика производительнсти сети между клиентом и сервером 
версия iperf должна совпадать на стороне клиента и сервера 
iperf -s  # запускает на стороне сервера 

Со стандартными парамтерами 10 пакетов 
Сомтрим Bitrate

student:~$ iperf3 -s    --- запускает iperf на стороне как в качестве сервера 
-----------------------------------------------------------
Server listening on 5201
-----------------------------------------------------------
Accepted connection from 127.0.0.1, port 50766
[  5] local 127.0.0.1 port 5201 connected to 127.0.0.1 port 50768
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-1.00   sec  3.61 GBytes  31.0 Gbits/sec                  
[  5]   1.00-2.00   sec  3.76 GBytes  32.3 Gbits/sec                  
[  5]   2.00-3.00   sec  3.67 GBytes  31.5 Gbits/sec                  
[  5]   3.00-4.00   sec  3.86 GBytes  33.2 Gbits/sec                  
[  5]   4.00-5.00   sec  3.35 GBytes  28.8 Gbits/sec                  
[  5]   5.00-6.00   sec  3.49 GBytes  29.9 Gbits/sec                  
[  5]   6.00-7.00   sec  3.75 GBytes  32.2 Gbits/sec                  
[  5]   7.00-8.00   sec  3.35 GBytes  28.8 Gbits/sec                  
[  5]   8.00-9.00   sec  3.71 GBytes  31.9 Gbits/sec                  
[  5]   9.00-10.00  sec  3.47 GBytes  29.8 Gbits/sec                  
[  5]  10.00-10.00  sec  3.75 MBytes  30.8 Gbits/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-10.00  sec  36.0 GBytes  30.9 Gbits/sec                  receiver
-----------------------------------------------------------
Server listening on 5201
-----------------------------------------------------------



iperf -c ip # на стороне клиента 

student:~$ iperf3  -c 127.0.0.1   --- на стороне клиента c = connect 
Connecting to host 127.0.0.1, port 5201
[  5] local 127.0.0.1 port 50768 connected to 127.0.0.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec  3.62 GBytes  31.1 Gbits/sec    0   3.18 MBytes       
[  5]   1.00-2.00   sec  3.76 GBytes  32.3 Gbits/sec    0   3.18 MBytes       
[  5]   2.00-3.00   sec  3.67 GBytes  31.5 Gbits/sec    1   3.18 MBytes       
[  5]   3.00-4.00   sec  3.86 GBytes  33.2 Gbits/sec    0   3.18 MBytes       
[  5]   4.00-5.00   sec  3.35 GBytes  28.7 Gbits/sec    0   3.18 MBytes       
[  5]   5.00-6.00   sec  3.49 GBytes  30.0 Gbits/sec    0   3.18 MBytes       
[  5]   6.00-7.00   sec  3.75 GBytes  32.2 Gbits/sec    1   3.18 MBytes       
[  5]   7.00-8.00   sec  3.35 GBytes  28.8 Gbits/sec    0   3.18 MBytes       
[  5]   8.00-9.00   sec  3.70 GBytes  31.8 Gbits/sec    0   3.18 MBytes       
[  5]   9.00-10.00  sec  3.48 GBytes  29.9 Gbits/sec    0   3.18 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  36.0 GBytes  30.9 Gbits/sec    2             sender
[  5]   0.00-10.00  sec  36.0 GBytes  30.9 Gbits/sec                  receiver

iperf Done.

Далее смотрим 
ifconfig  # расширенная информация по сетевым интерфейсам
student:~$ ifconfig enp0s3
enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
        inet6 fd00::52d9:b752:424:8f7a  prefixlen 64  scopeid 0x0<global>
        inet6 fd00::c300:6291:a8e4:5695  prefixlen 64  scopeid 0x0<global>
        inet6 fe80::cdc0:3007:feab:10ce  prefixlen 64  scopeid 0x20<link>
        ether 08:00:27:f3:8a:e7  txqueuelen 1000  (Ethernet)
        RX packets 269  bytes 329770 (329.7 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 156  bytes 18414 (18.4 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

iptables 






=======================================================================================================================
# netstat  Проверка состояния   
- без параметров выведет список всех соединений и состояний в которых находятся эти соединения 
(смотрим состояние state  ESTABLISHE)

netstat  -nt  
-n отображать доменные именя и порты в виде цифр 
-t  только tsp  соединение 

# Есть возможность ограничить выделение рессссурсов сервера используя контрольные группы (cgroups)
##########################################################################
Возможно, имелись в виду контрольные группы (cgroups) в Linux.  12

Cgroups — это механизм ядра Linux, который позволяет ограничивать, учитывать и изолировать использование системных ресурсов для групп процессов. С его помощью можно контролировать, например, процессорное время, количество памяти, доступ к устройствам.  31

Некоторые возможности механизма cgroups:

Ограничение ресурсов. Например, можно ограничить использование памяти, в том числе виртуальной. 2
Приоритизация. Разным группам можно выделить разное количество процессорного ресурса и пропускной способности подсистемы ввода-вывода. 2
Учёт. Подсчёт затрат тех или иных ресурсов группой. 2
Изоляция. Разделение пространств имён для групп таким образом, что одной группе недоступны процессы, сетевые соединения и файлы другой. 2
Управление. Можно приостановить группы, создать контрольные точки и перезагрузить их. 2
Некоторые контроллеры cgroups:

CPU. Контролирует использование процессорного времени. Можно установить лимиты на процент использования CPU или распределять время между группами процессов. 3
Memory. Ограничивает использование оперативной памяти и swap. 3
IO. Контролирует ввод-вывод на блочные устройства. 3
Devices. Управляет доступом к устройствам. Позволяет разрешить или запретить определённым процессам доступ к конкретным устройствам. 3
PIDs. Ограничивает количество процессов в группе. 3
Существует две версии cgroups: v1 и v2. Вторая версия объединяет все контроллеры в единую иерархию и упрощает управление. В современных дистрибутивах Linux по дефолту используется cgroups v2. 3
##########################################################################
# В случае если df -h  показывает 100%   заполненость диска, а  du -sh  в разы меньше - Значит какой-то процесс не отпускает файл, который удалили.
# Надо смотреть через lsof и грохать этот процесс 

lsof — команда в Linux, которая отображает все открытые файлы или идентифицирует процессы, открытые конкретными файлами. 1

Чтобы вывести на экран список всех используемых файлов в операционной системе, нужно выполнить команду lsof без каких-либо опций и аргументов: lsof. 2

Некоторые другие примеры использования команды lsof:

Отображение файлов, используемых конкретным пользователем. Для этого нужно выполнить команду lsof с опцией -u и именем пользователя в качестве аргумента. Например: lsof -u user. 2
Поиск процессов, которые прослушивают сетевые порты. Для этой задачи нужно использовать команду вместе с опцией -i: lsof -i. 2
Вывод файлов, открытых процессами определённого пользователя, которые используют сетевые соединения. Можно объединить опции -i и -u, чтобы вывести на экран информацию о файлах, открытых процессами конкретного пользователя, использующих сетевые соединения. Например: lsof -i -u user. 2
Вывод списка файлов, используемых определённым процессом. Опция -p команды lsof позволяет вывести на экран информацию о файлах, которые открыты конкретным процессом. Например: lsof -p 1. 2
Команда lsof предустановлена в большинстве дистрибутивов Linux. Если её нет в системе, можно установить с помощью менеджера пакетов. 3
##########################################################################

